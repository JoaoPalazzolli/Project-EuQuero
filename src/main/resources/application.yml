server:
  port: 8080
authorizeHttpRequests:
  permitAll: /auth/login,/auth/register,/swagger-ui/**,/v3/api-docs/**,/auth/emailVerification,/auth/resendEmailVerification,/api/v1/organizacao
  authenticated: /auth/refresh,/api/v1/plans/buy/**
  premium: /api/**
  adminsOnly: /admin/**
  denyAll: /users
security:
  jwt:
    token:
      secret-key: 743677397A244326452948404D635166546A576E5A7234753778214125442A47
      expire-length: 3600000
spring:
  application:
    name: project-euquero
  profiles:
    active: @profileActive@
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob:
          non_contextual_creation: true
    show-sql: false
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 200MB
      max-request-size: 215MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
support:
  mail: ${MAIL_USERNAME}
flyway:
  url: ${DATABASE_URL}
  schemas: ${DATABASE_SCHEMA}
  user: ${DATABASE_USER}
  password: ${DATABASE_PASSWORD}
cloudinary:
  cloud-name: ${CLOUD_NAME}
  api-key: ${API_KEY}
  api-secret: ${API_SECRET}


# dev configuration
---
spring:
  config:
    activate:
      on-profile: dev
    import: optional:file:dev.env[.properties]
cors:
  originPatterns: http://localhost:8080,http://127.0.0.1:5500

# prod configuration
---
spring:
  config:
    activate:
      on-profile: prod
cors:
  originPatterns: http://localhost:8080,http://127.0.0.1:5500